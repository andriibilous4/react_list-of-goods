{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","SortType","App","_React$useState","React","useState","_React$useState2","_slicedToArray","isReversed","setIsReversed","_React$useState3","NONE","_React$useState4","sortType","setSortType","goods","_ref","visibleGoods","_toConsumableArray","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","_jsxs","className","children","_jsx","type","concat","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"oOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGGC,EAAQ,SAARA,GAAQ,OAARA,IAAQ,eAARA,IAAQ,uBAARA,IAAQ,mBAARA,CAAQ,EAARA,GAAQ,IAsCN,IAAMC,EAAgB,WAC3B,IAAAC,EAAoCC,IAAMC,UAAS,GAAMC,EAAAC,YAAAJ,EAAA,GAAlDK,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,EAAgCN,IAAMC,SAASJ,EAASU,MAAKC,EAAAL,YAAAG,EAAA,GAAtDG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtBG,EA7BD,SACLA,EAAeC,GAEd,IADCH,EAAQG,EAARH,SAAUL,EAAUQ,EAAVR,WAGNS,EAAYC,YAAOH,GAYzB,OAVIF,IAAaZ,EAASkB,UACxBF,EAAaG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEE,cAAcD,EAAE,IAG5CT,IAAaZ,EAASuB,QACxBP,EAAaG,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEI,OAASH,EAAEG,MAAM,IAK1CjB,EAAaS,EAAaS,UAAYT,CAC/C,CAWgBU,CAAkB3B,EAAiB,CAAEa,WAAUL,eAE7D,OACEoB,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,KAAK,SACLH,UAAS,kBAAAI,OAAoBpB,IAAaZ,EAASkB,SAAW,WAAa,IAC3Ee,QAAS,WACPpB,EAAYb,EAASkB,SACvB,EAAEW,SACH,wBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,OAAuBpB,IAAaZ,EAASuB,OAAS,WAAa,IAC5EU,QAAS,WACPpB,EAAYb,EAASuB,OACvB,EAAEM,SACH,mBAIDC,cAAA,UACEC,KAAK,SACLH,UAAS,qBAAAI,OAAwBzB,EAA0B,GAAb,YAC9C0B,QAAS,WACPzB,GAAeD,EACjB,EAAEsB,SACH,aAGCtB,GAAcK,IAAaZ,EAASU,OAElCoB,cAAA,UACEC,KAAK,SACLH,UAAU,4BACVK,QAAS,WACPzB,GAAc,GACdK,EAAYb,EAASU,KACvB,EAAEmB,SACH,aAMPC,cAAA,MAAAD,SACGf,EAAMoB,KAAI,SAACC,GAAI,OAAKL,cAAA,MAAe,UAAQ,OAAMD,SAAEM,GAAtBA,EAAgC,QAItE,EC7GAC,IAASC,OACPP,cAAC7B,EAAG,IACJqC,SAASC,eAAe,Q","file":"static/js/main.ba593232.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = React.useState(false);\n  const [sortType, setSortType] = React.useState(SortType.NONE);\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${sortType !== SortType.ALPHABET ? 'is-light' : ''}`}\n          onClick={() => {\n            setSortType(SortType.ALPHABET);\n          }}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${sortType !== SortType.LENGTH ? 'is-light' : ''}`}\n          onClick={() => {\n            setSortType(SortType.LENGTH);\n          }}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!isReversed ? 'is-light' : ''}`}\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n        >\n          Reverse\n        </button>\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                setIsReversed(false);\n                setSortType(SortType.NONE);\n              }}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {goods.map((item) => <li key={item} data-cy=\"Good\">{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}